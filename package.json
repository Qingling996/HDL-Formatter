{
  "name": "hdl-formatter",
  "displayName": "Adolph HDL Formatter", 
  "description": "Verilog/VHDL/SystemVerilog support for VS Code",
  "version": "1.0.5",
  "publisher": "AdolphWang",
  "homepage": "https://marketplace.visualstudio.com/items?itemName=AdolphWang.hdl-formatter",
  "repository": {
    "type": "git",
    "url": "https://github.com/Qingling996/HDL-Formatter.git"
  },
  "engines": {
    "vscode": "^1.75.0"
  },
  "categories": [
    "Programming Languages",
    "Snippets",
    "Linters",
    "Formatters"
  ],
  "icon": "images/icon.png",
  "main": "./dist/main.js",
  "files": [
    "dist", 
    "images", 
    "configs", 
    "syntaxes", 
    "snippets",
    "resources",
    "LICENSE.txt",
    "README.md"
  ],
  "contributes": {
    "languages": [
      {
        "id": "verilog",
        "aliases": [
          "Verilog",
          "verilog"
        ],
        "extensions": [
          ".v",
          ".vh",
          ".vl"
        ],
        "configuration": "./configs/verilog.configuration.json"
      },
      {
        "id": "verilogams",
        "aliases": [
          "Verilog-AMS",
          "verilog-ams",
          "vams",
          "VAMS",
          "verilogams"
        ],
        "extensions": [
          ".vams",
          ".va"
        ],
        "configuration": "./configs/verilogams.configuration.json"
      },
      {
        "id": "systemverilog",
        "aliases": [
          "System Verilog",
          "systemverilog"
        ],
        "extensions": [
          ".sv",
          ".svh",
          ".SV"
        ],
        "configuration": "./configs/systemverilog.configuration.json"
      },
      {
        "id": "bsv",
        "aliases": [
          "BluespecSystemVerilog",
          "Bluespec SystemVerilog",
          "BSV"
        ],
        "extensions": [
          ".bsv",
          ".BSV"
        ],
        "configuration": "./configs/BSV.configuration.json"
      },
      {
        "id": "vhdl",
        "aliases": [
          "VHDL",
          "vhdl"
        ],
        "extensions": [
          ".vhd",
          ".vhdl",
          ".vho"
        ],
        "configuration": "./configs/vhdl.configuration.json"
      },
      {
        "id": "ucf",
        "aliases": [
          "vivado ucf",
          "ucf constraints"
        ],
        "extensions": [
          ".ucf"
        ],
        "configuration": "./configs/ucfconstraints.configuration.json"
      },
      {
        "id": "sdc",
        "aliases": [
          "Synopsys Design Constraints"
        ],
        "extensions": [
          ".sdc"
        ],
        "configuration": "./configs/sdc.configuration.json"
      },
      {
        "id": "tcl",
        "aliases": [
          "Tcl",
          "tcl"
        ],
        "extensions": [
          ".tcl",
          "tm",
          "tk"
        ],
        "configuration": "./configs/tcl.configuration.json"
      },
      {
        "id": "xdc",
        "aliases": [
          "Xilinx Design Constraints"
        ],
        "extensions": [
          ".xdc"
        ],
        "configuration": "./configs/sdc.configuration.json"
      },
      {
        "id": "verilog-filelist",
        "aliases": [
          "Verilog Filelist",
          "verilog-filelist"
        ],
        "extensions": [
          ".f"
        ],
        "configuration": "./configs/verilog-filelist.configuration.json"
      }
    ],
    "grammars": [
      {
        "language": "verilog",
        "scopeName": "source.verilog",
        "path": "./syntaxes/verilog.tmLanguage.json"
      },
      {
        "language": "verilogams",
        "scopeName": "source.verilogams",
        "path": "./syntaxes/verilogams.tmLanguage.json"
      },
      {
        "language": "systemverilog",
        "scopeName": "source.systemverilog",
        "path": "./syntaxes/systemverilog.tmLanguage.json"
      },
      {
        "language": "bsv",
        "scopeName": "source.bsv",
        "path": "./syntaxes/BSV.tmLanguage.json"
      },
      {
        "language": "vhdl",
        "scopeName": "source.vhdl",
        "path": "./syntaxes/vhdl.tmLanguage.json"
      },
      {
        "language": "ucf",
        "scopeName": "source.ucfconstraints",
        "path": "./syntaxes/ucf.tmLanguage.json"
      },
      {
        "language": "sdc",
        "scopeName": "source.sdc",
        "path": "./syntaxes/sdc.tmLanguage.json"
      },
      {
        "language": "tcl",
        "scopeName": "source.tcl",
        "path": "./syntaxes/tcl.tmlanguage.json"
      },
      {
        "language": "xdc",
        "scopeName": "source.sdc",
        "path": "./syntaxes/sdc.tmLanguage.json"
      },
      {
        "scopeName": "markdown.verilog.codeblock",
        "path": "./syntaxes/codeblock.json",
        "injectTo": [
          "text.html.markdown"
        ],
        "embeddedLanguages": {
          "meta.embedded.block.verilog": "source.verilog",
          "meta.embedded.block.systemverilog": "source.systemverilog"
        }
      },
      {
        "language": "verilog-filelist",
        "scopeName": "source.verilog-filelist",
        "path": "./syntaxes/verilog-filelist.tmLanguage.json"
      }
    ],
    "snippets": [
      {
        "language": "verilog",
        "path": "./snippets/verilog.json"
      },
      {
        "language": "vhdl",
        "path": "./snippets/vhdl.json"
      },
      {
        "language": "verilogams",
        "path": "./snippets/verilogams.json"
      },
      {
        "language": "verilogams",
        "path": "./snippets/verilog.json"
      },
      {
        "language": "systemverilog",
        "path": "./snippets/verilog.json"
      },
      {
        "language": "systemverilog",
        "path": "./snippets/systemverilog.json"
      },
      {
        "language": "bsv",
        "path": "./snippets/bsv.json"
      }
    ],
    "configuration": {
      "title": "Verilog configuration",
      "properties": {
        "verilog.linting.path": {
          "scope": "window",
          "type": "string",
          "default": "",
          "description": "A path to the installation of linter."
        },
        "verilog.linting.linter": {
          "scope": "window",
          "type": "string",
          "enum": [
            "xvlog",
            "iverilog",
            "verilator",
            "modelsim",
            "slang",
            "none"
          ],
          "default": "none",
          "description": "Select the verilog linter. Possible values are 'iverilog', 'verilator', 'modelsim', 'xvlog', 'slang' or 'none'."
        },
        "verilog.linting.iverilog.arguments": {
          "scope": "window",
          "type": "string",
          "default": "",
          "description": "Add Icarus Verilog arguments here (like macros). They will be added to Icarus Verilog while linting (The command \"-t null\" will be added by the linter by default)."
        },
        "verilog.linting.iverilog.includePath": {
          "scope": "window",
          "type": "array",
          "items": {
            "type": "string"
          },
          "uniqueItems": true,
          "description": "A list of directory paths to use while Icarus Verilog linting."
        },
        "verilog.linting.iverilog.verilogHDL.standard": {
          "scope": "window",
          "type": "string",
          "enum": [
            "Verilog-95",
            "Verilog-2001",
            "Verilog-2005"
          ],
          "enumDescriptions": [
            "IEEE1364-1995, specified by -g1995 option in Icarus Verilog",
            "IEEE1364-2001, specified by -g2001 option in Icarus Verilog",
            "IEEE1364-2005, specified by -g2005 option in Icarus Verilog"
          ],
          "default": "Verilog-2005",
          "description": "Select the standard rule to be used when Icarus Verilog linting for Verilog-HDL files."
        },
        "verilog.linting.iverilog.systemVerilog.standard": {
          "scope": "window",
          "type": "string",
          "enum": [
            "SystemVerilog2005",
            "SystemVerilog2009",
            "SystemVerilog2012"
          ],
          "enumDescriptions": [
            "IEEE1800-2005, specified by -g2005-sv option in Icarus Verilog",
            "IEEE1800-2009, specified by -g2009 option in Icarus Verilog",
            "IEEE1800-2012, specified by -g2012 option in Icarus Verilog"
          ],
          "default": "SystemVerilog2012",
          "description": "Select the standard rule to be used when Icarus Verilog linting for SystemVerilog files."
        },
        "verilog.linting.iverilog.runAtFileLocation": {
          "scope": "window",
          "type": "boolean",
          "default": false,
          "description": "If enabled, Icarus Verilog will be run at the file location for linting. Else it will be run at workspace folder. Disabled by default."
        },
        "verilog.linting.modelsim.runAtFileLocation": {
          "scope": "window",
          "type": "boolean",
          "default": false,
          "description": "If enabled, Modelsim will be run at the file location for linting. Else it will be run at workspace folder. Disabled by default."
        },
        "verilog.linting.modelsim.arguments": {
          "scope": "window",
          "type": "string",
          "default": "",
          "description": "Add Modelsim arguments here. They will be added to Modelsim while linting."
        },
        "verilog.linting.modelsim.work": {
          "scope": "window",
          "type": "string",
          "default": "",
          "description": "Add Modelsim work library here."
        },
        "verilog.linting.slang.arguments": {
          "scope": "window",
          "type": "string",
          "default": "",
          "description": "Add Slang arguments here (like macros). They will be added to Slang while linting (The command \"-I=<document folder>\" will be added by the linter by default)."
        },
        "verilog.linting.slang.includePath": {
          "scope": "window",
          "type": "array",
          "items": {
            "type": "string"
          },
          "uniqueItems": true,
          "description": "A list of directory paths to use while Slang linting."
        },
        "verilog.linting.slang.runAtFileLocation": {
          "scope": "window",
          "type": "boolean",
          "default": false,
          "description": "If enabled, Slang will be run at the file location for linting. Else it will be run at workspace folder. Disabled by default."
        },
        "verilog.linting.slang.useWSL": {
          "scope": "window",
          "type": "boolean",
          "default": false,
          "description": "If enabled, run slang in WSL."
        },
        "verilog.linting.verilator.arguments": {
          "scope": "window",
          "type": "string",
          "default": "",
          "description": "Add Verilator arguments here (like macros). They will be added to Verilator while linting (The command \"--lint-only -I<document folder>\" will be added by the linter by default)."
        },
        "verilog.linting.verilator.includePath": {
          "scope": "window",
          "type": "array",
          "items": {
            "type": "string"
          },
          "uniqueItems": true,
          "description": "A list of directory paths to use while Verilator linting."
        },
        "verilog.linting.verilator.runAtFileLocation": {
          "scope": "window",
          "type": "boolean",
          "default": false,
          "description": "If enabled, Verilator will be run at the file location for linting. Else it will be run at workspace folder. Disabled by default."
        },
        "verilog.linting.verilator.useWSL": {
          "scope": "window",
          "type": "boolean",
          "default": false,
          "description": "If enabled, run verilator in WSL."
        },
        "verilog.linting.xvlog.arguments": {
          "scope": "window",
          "type": "string",
          "default": "",
          "description": "Add xvlog arguments here. They will be added to xvlog while linting."
        },
        "verilog.linting.xvlog.includePath": {
          "scope": "window",
          "type": "array",
          "items": {
            "type": "string"
          },
          "uniqueItems": true,
          "description": "A list of directory paths to use while xvlog linting."
        },
        "verilog.ctags.path": {
          "scope": "window",
          "type": "string",
          "default": "none",
          "description": "Optional. A path to a custom installation of Universal Ctags. If set to 'none', the extension will use its built-in version."
        },
        "verilog.languageServer.svls.enabled": {
          "scope": "window",
          "type": "boolean",
          "default": false,
          "description": "[Experimental] Enable svls Language Server for SystemVerilog."
        },
        "verilog.languageServer.svls.path": {
          "scope": "window",
          "type": "string",
          "default": "svls",
          "description": "[Experimental] A path to the Svls Language Server binary."
        },
        "verilog.languageServer.svls.arguments": {
          "scope": "window",
          "type": "string",
          "default": "",
          "description": "[Experimental] Add custom arguments for the Svls Language Server."
        },
        "verilog.languageServer.veridian.enabled": {
          "scope": "window",
          "type": "boolean",
          "default": false,
          "description": "[Experimental] Enable veridian Language Server for SystemVerilog."
        },
        "verilog.languageServer.veridian.path": {
          "scope": "window",
          "type": "string",
          "default": "veridian",
          "description": "[Experimental] A path to the Veridian Language Server binary."
        },
        "verilog.languageServer.veridian.arguments": {
          "scope": "window",
          "type": "string",
          "default": "",
          "description": "[Experimental] Add custom arguments for the HDL Checker Veridian Language Server."
        },
        "verilog.languageServer.hdlChecker.enabled": {
          "scope": "window",
          "type": "boolean",
          "default": false,
          "description": "[Experimental] Enable HDL Checker Language Server for Verilog-HDL, SystemVerilog, and VHDL."
        },
        "verilog.languageServer.hdlChecker.arguments": {
          "scope": "window",
          "type": "string",
          "default": "",
          "description": "[Experimental] Add custom arguments for the HDL Checker Language Server."
        },
        "verilog.languageServer.veribleVerilogLs.enabled": {
          "scope": "window",
          "type": "boolean",
          "default": false,
          "description": "[Experimental] Enable verible-verilog-ls Language Server for SystemVerilog."
        },
        "verilog.languageServer.veribleVerilogLs.path": {
          "scope": "window",
          "type": "string",
          "default": "verible-verilog-ls",
          "description": "[Experimental] A path to the verible-verilog-ls Language Server binary."
        },
        "verilog.languageServer.veribleVerilogLs.arguments": {
          "scope": "window",
          "type": "string",
          "default": "",
          "description": "[Experimental] Add custom arguments for the verible-verilog-ls Language Server."
        },
        "verilog.languageServer.hdlChecker.path": {
          "scope": "window",
          "type": "string",
          "default": "hdl_checker",
          "description": "[Experimental] A path to the HDL Checker Language Server binary."
        },
        "verilog.languageServer.rustHdl.enabled": {
          "scope": "window",
          "type": "boolean",
          "default": false,
          "description": "[Experimental] Enable Rust hdl Language Server for VHDL."
        },
        "verilog.languageServer.rustHdl.path": {
          "scope": "window",
          "type": "string",
          "default": "vhdl_ls",
          "description": "[Experimental] A path to the Rust hdl Language Server binary."
        },
        "verilog.languageServer.rustHdl.arguments": {
          "scope": "window",
          "type": "string",
          "default": "",
          "description": "[Experimental] Add custom arguments for the Rust hdl Language Server."
        },
        "verilog.formatting.verilogHDL.formatter": {
          "scope": "window",
          "type": "string",
          "enum": [
            "verilog-format",
            "iStyle",
            "verible-verilog-format"
          ],
          "default": "verilog-format",
          "description": "[Experimental] Choose a Verilog-Adolph HDL formatter."
        },
        "verilog.formatting.systemVerilog.formatter": {
          "scope": "window",
          "type": "string",
          "enum": [
            "verible-verilog-format"
          ],
          "default": "verible-verilog-format",
          "description": "[Experimental] Choose a SystemVerilog formatter."
        },
        "verilog.formatting.verilogFormat.path": {
          "scope": "window",
          "type": "string",
          "default": "verilog-format",
          "description": "[Experimental] A path to the verilog-format binary."
        },
        "verilog.formatting.verilogFormat.settings": {
          "scope": "window",
          "type": "string",
          "default": "${env:HOME}/.verilog-format.properties",
          "description": "[Experimental] A path to the verilog-format settings file."
        },
        "verilog.formatting.iStyleVerilogFormatter.path": {
          "scope": "window",
          "type": "string",
          "default": "iStyle",
          "description": "[Experimental] A path to the iStyle Verilog Formatter binary."
        },
        "verilog.formatting.iStyleVerilogFormatter.arguments": {
          "scope": "window",
          "type": "string",
          "default": "",
          "description": "[Experimental] Add custom arguments to iStyle Verilog Formatter for formatting."
        },
        "verilog.formatting.iStyleVerilogFormatter.style": {
          "scope": "window",
          "type": "string",
          "enum": [
            "ANSI",
            "K&R",
            "GNU",
            "Indent only"
          ],
          "default": "Indent only",
          "description": "[Experimental] Choose styling options from ANSI/K&R/GNU."
        },
        "verilog.formatting.veribleVerilogFormatter.path": {
          "scope": "window",
          "type": "string",
          "default": "verible-verilog-format",
          "description": "[Experimental] A path to the verible-verilog-format binary."
        },
        "verilog.formatting.veribleVerilogFormatter.arguments": {
          "scope": "window",
          "type": "string",
          "default": "",
          "description": "[Experimental] Add custom arguments to verible-verilog-format for formatting."
        },
        "verilog.formatter.ast.port_num2": {
          "type": "number",
          "default": 16,
          "description": "[AST Formatter] 行首 -> signed/unsigned."
        },
        "verilog.formatter.ast.port_num3": {
          "type": "number",
          "default": 24,
          "description": "[AST Formatter] 行首 -> 位宽 '['."
        },
        "verilog.formatter.ast.port_num4": {
          "type": "number",
          "default": 48,
          "description": "[AST Formatter] 行首 -> 信号名."
        },
        "verilog.formatter.ast.port_num5": {
          "type": "number",
          "default": 80,
          "description": "[AST Formatter] 行首 -> 行尾符号 (, or ;)."
        },
        "verilog.formatter.ast.signal_num2": {
          "type": "number",
          "default": 16,
          "description": "[AST Formatter] 行首 -> signed/unsigned."
        },
        "verilog.formatter.ast.signal_num3": {
          "type": "number",
          "default": 24,
          "description": "[AST Formatter] 行首 -> 位宽 '['."
        },
        "verilog.formatter.ast.signal_num4": {
          "type": "number",
          "default": 48,
          "description": "[AST Formatter] 行首 -> 变量名."
        },
        "verilog.formatter.ast.signal_num5": {
          "type": "number",
          "default": 80,
          "description": "[AST Formatter] 行首 -> 行尾符号 (;)."
        },
        "verilog.formatter.ast.param_num2": {
          "type": "number",
          "default": 24,
          "description": "[AST Formatter] 行首 -> 参数名."
        },
        "verilog.formatter.ast.param_num3": {
          "type": "number",
          "default": 48,
          "description": "[AST Formatter] 行首 -> 赋值符号 (=)."
        },
        "verilog.formatter.ast.param_num4": {
          "type": "number",
          "default": 80,
          "description": "[AST Formatter] 行首 -> 行尾符号 (; , or //)."
        },
        "verilog.formatter.ast.inst_num2": {
          "type": "number",
          "default": 40,
          "description": "[AST Formatter] 端口名 '.' -> 左括号 '('."
        },
        "verilog.formatter.ast.inst_num3": {
          "type": "number",
          "default": 80,
          "description": "[AST Formatter] 端口名 '.' -> 右括号 ')'."
        },
        "verilog.formatter.ast.assign_num2": {
          "type": "number",
          "default": 20,
          "description": "[AST Formatter] 行首 -> 变量名."
        },
        "verilog.formatter.ast.assign_num3": {
          "type": "number",
          "default": 48,
          "description": "[AST Formatter] 行首 -> 赋值符号 (=)."
        },
        "verilog.formatter.ast.assign_num4": {
          "type": "number",
          "default": 80,
          "description": "[AST Formatter] 行首 -> 行尾符号 (;)."
        },
        "verilog.formatter.ast.always_rvalue_align": {
          "type": "number",
          "default": 4,
          "description": "[AST Formatter] 赋值语句右值相对赋值符号的空格."
        },
        "verilog.formatter.ast.always_op_align": {
          "type": "number",
          "default": 32,
          "description": "[AST Formatter] 赋值符号对齐列."
        },
        "verilog.formatter.ast.always_comment_align": {
          "type": "number",
          "default": 83,
          "description": "[AST Formatter] 行尾注释对齐列."
        },
        "verilog.formatter.ast.case_colon_align": {
          "type": "number",
          "default": 20,
          "description": "[AST Formatter] case 语句中冒号对齐."
        },
        "verilog.formatter.ast.case_stmt_align": {
          "type": "number",
          "default": 28,
          "description": "[AST Formatter] case 语句中执行语句对齐."
        },
        "verilog.formatter.ast.upbound": {
          "type": "number",
          "default": 5,
          "description": "[AST Formatter] 位宽 `[]` 内左侧空格数."
        },
        "verilog.formatter.ast.lowbound": {
          "type": "number",
          "default": 5,
          "description": "[AST Formatter] 位宽 `[]` 内右侧空格数."
        }
      }
    },
    "commands": [
      {
        "command": "verilog.instantiateModule",
        "title": "Verilog: Instantiate Module"
      },
      {
        "command": "verilog.lint",
        "title": "Verilog: Rerun lint tool"
      },
      {
        "command": "verilogFileTree.refresh",
        "title": "Refresh Verilog File Tree"
      },
      {
        "command": "verilogTree.openContainingFolder",
        "title": "在文件夹中显示"
      },
      {
        "command": "verilogFormatter.formatActiveFile",
        "title": "Format Verilog with AST Formatter",
        "category": "Verilog"
      }
    ],
    "keybindings": [
      {
        "command": "verilog.instantiateModule",
        "key": "alt+i",
        "mac": "alt+i",
        "when": "editorTextFocus && (editorLangId == verilog || editorLangId == systemverilog)"
      },
      {
        "command": "verilogFormatter.formatActiveFile",
        "key": "alt+a",
        "mac": "alt+a",
        "when": "editorTextFocus && (editorLangId == 'verilog' || editorLangId == 'systemverilog')"
      }
    ],
    "viewsContainers": {
      "activitybar": [
        {
          "id": "verilogFileTreeContainer",
          "title": "Verilog File Tree",
          "icon": "./images/container.png"
        }
      ]
    },
    "views": {
      "verilogFileTreeContainer": [
        {
          "icon": "./images/container.png",
          "id": "verilogFileTree",
          "name": "Verilog File Tree"
        }
      ]
    },
    "menus": {
      "view/title": [
        {
          "command": "verilogFileTree.refresh",
          "group": "navigation",
          "when": "view == verilogFileTree"
        }
      ],
      "view/item/context": [
        {
          "command": "verilogTree.openContainingFolder",
          "when": "view == verilogFileTree && viewItem",
          "group": "navigation"
        }
      ]
    }
  },
  "scripts": {
    "compile-tests": "tsc -p . --outDir out",
    "watch-tests": "tsc -p . -w --outDir out",
    "lint": "eslint src --ext ts",
    "vscode:prepublish": "npm run compile && npm run esbuild-base -- --minify",
    "esbuild-base": "esbuild ./src/extension.ts --bundle --outfile=dist/main.js --external:vscode --format=cjs --platform=node",
    "esbuild": "npm run esbuild-base -- --sourcemap",
    "esbuild-watch": "npm run esbuild-base -- --sourcemap --watch",
    "test-compile": "tsc -p ./",
    "compile": "npm run syntax && tsc -p ./",
    "package": "vsce package",
    "watch": "tsc -w -p ./",
    "syntax": "js-yaml ./syntaxes/systemverilog.tmLanguage.yaml >./syntaxes/systemverilog.tmLanguage.json",
    "makeBsv": "antlr4ts -visitor syntaxes/bsv.g4 -o src/bsvjs",
    "pretest": "npm run compile-tests && npm run compile && npm run lint",
    "test": "node ./out/src/test/bsv.js"
  },
  "dependencies": {
    "antlr4": "^4.13.1-patch-1",
    "antlr4ts": "^0.5.0-alpha.4",
    "js-yaml": "^4.1.0",
    "semver": "^7.6.0",
    "vscode-languageclient": "^9.0.1",
    "which": "^5.0.0"
  },
  "devDependencies": {
    "@types/antlr4": "4.11.6",
    "@types/glob": "^9.0.0",
    "@types/mocha": "~10.0.6",
    "@types/node": "~22.10.0",
    "@types/vscode": "^1.75.0",
    "@types/which": "^3.0.3",
    "@typescript-eslint/eslint-plugin": "^8.39.1",
    "@typescript-eslint/parser": "^8.39.1",
    "@vscode/test-electron": "^2.3.9",
    "@vscode/vsce": "~3.1.0",
    "antlr4ts-cli": "0.5.0-alpha.4",
    "esbuild": "^0.20.2",
    "eslint": "9.33.0",
    "eslint-config-prettier": "^10.1.8",
    "eslint-plugin-import": "2.32.0",
    "eslint-plugin-n": "17.21.3",
    "eslint-plugin-promise": "7.2.1",
    "glob": "^11.0.0",
    "mocha": "^11.0.0",
    "ts-loader": "^9.5.1",
    "typescript": "5.4.3"
  },
  "__metadata": {
    "id": "feb7e3b5-7d35-4f95-a3d2-61eeaa12efa5",
    "publisherDisplayName": "mshr-h",
    "publisherId": "fcf32c99-a624-437b-9f47-9333ea128623"
  }
}
